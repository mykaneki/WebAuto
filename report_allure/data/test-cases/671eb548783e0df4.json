{"uid":"671eb548783e0df4","name":"参数化用例标题: 添加 1 和 2","fullName":"test_case.test_baidu#test_with_parameterized_title","historyId":"e50775ce7bb16475211d2f7ae759eb4a","time":{"start":1691481641750,"stop":1691481641751,"duration":1},"status":"failed","statusMessage":"AssertionError: assert (1 + 2) == 5","statusTrace":"param1 = 1, param2 = 2, expected = 5\n\n    @allure.title(\"参数化用例标题: 添加 {param1} 和 {param2}\")\n    @pytest.mark.parametrize('param1,param2,expected', [\n        (2, 2, 4),\n        (1, 2, 5)\n    ])\n    def test_with_parameterized_title(param1, param2, expected):\n>       assert param1 + param2 == expected\nE       assert (1 + 2) == 5\n\ntest_case\\test_baidu.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1691481630369,"stop":1691481641739,"duration":11370},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (1 + 2) == 5","statusTrace":"param1 = 1, param2 = 2, expected = 5\n\n    @allure.title(\"参数化用例标题: 添加 {param1} 和 {param2}\")\n    @pytest.mark.parametrize('param1,param2,expected', [\n        (2, 2, 4),\n        (1, 2, 5)\n    ])\n    def test_with_parameterized_title(param1, param2, expected):\n>       assert param1 + param2 == expected\nE       assert (1 + 2) == 5\n\ntest_case\\test_baidu.py:33: AssertionError","steps":[{"name":"添加失败截图","time":{"start":1691481641865,"stop":1691481641997,"duration":132},"status":"passed","steps":[],"attachments":[{"uid":"efa5477e0b215e3c","name":"失败截图","source":"efa5477e0b215e3c.png","type":"image/png","size":8972}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":1,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1691481642001,"stop":1691481644096,"duration":2095},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_baidu"},{"name":"host","value":"ming"},{"name":"thread","value":"16180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_baidu"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected","value":"5"},{"name":"param1","value":"1"},{"name":"param2","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"671eb548783e0df4.json","parameterValues":["5","1","2"]}